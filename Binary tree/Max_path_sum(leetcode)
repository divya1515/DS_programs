/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
int height(TreeNode* root,int &mx)
{
    if(!root)return 0;
    int left=height(root->left,mx);
    int right=height(root->right,mx);
    int s=root->val;
    if(left<0 && right>=0)
    s+=right;
    else
    {
    if(right<0 && left>=0)
    s+=left;
    else
    if(left>=0 && right>=0)
    s+=left+right;
    }
    mx=max(mx,s);
    if(left<0 && right<0)
    return root->val;
    return (root->val+max(left,right));
}
    int maxPathSum(TreeNode* root) {
       int mx=-1e7;
        height(root,mx);
        return mx;
    }
};
