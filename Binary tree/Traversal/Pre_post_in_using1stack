/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int>pre;
         vector<int>post;
          vector<int>inorder;
        if(root==NULL) return inorder;
        stack<pair<TreeNode*,int>>st;
        st.push({root,1});
        while(!(st.empty()))
        {
            auto it=st.top();
            TreeNode *s=it.first;
            if(it.second==1)
            {
                pre.push_back(s->val);
                (st.top().second)++;
                if(s->left!=NULL)
                {
                    st.push({s->left,1});
                }
            }
            else
            {
            if(it.second==2)
            {
                inorder.push_back(s->val);
                (st.top().second)++;
                if(s->right!=NULL)
                {
                    st.push({s->right,1});
                }
            }
            else
            if(it.second==3)
            {
                post.push_back(s->val);
                st.pop();
            }
            }
        }
        return inorder;
    }
        
};
