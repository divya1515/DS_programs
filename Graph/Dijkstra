 vector <int> dijkstra(int V, vector<vector<int>> adj[], int S)
    {
        // Code here
        vector<int>dis(V,INT_MAX);
        dis[S]=0;
        priority_queue<pair<int,int>,vector<pair<int,int> > , greater<pair<int,int> > >pq;
        pq.push({0,S});
        while(!pq.empty())
        {
            auto g=pq.top();
            pq.pop();
            int d=g.first;
            for(auto y:adj[g.second])
            {
                if((dis[y[0]])>(y[1]+d))
                {
                    dis[y[0]]=y[1]+d;
                    pq.push({dis[y[0]],y[0]});
                }
            }
        }
        return dis;
    }

Using Set---------------------------------------------------------------------------------------------------------
 vector <int> dijkstra(int V, vector<vector<int>> adj[], int S)
    {
        // Code here
        vector<int>dis(V,INT_MAX);
        dis[S]=0;
        set<pair<int,int>>st;
        st.insert({0,S});
        while(!st.empty())
        {
            auto s=st.begin();
            auto g=*s;
            st.erase(g);
            int d=g.first;
            for(auto y:adj[g.second])
            {
                if((dis[y[0]])>(y[1]+d))
                {
                    if(dis[y[0]]!=INT_MAX)
                    st.erase({dis[y[0]],y[0]});
                    dis[y[0]]=y[1]+d;
                    st.insert({ dis[y[0]],y[0]});
                }
            }
        }
        return dis;
    }
